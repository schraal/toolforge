<?xml version="1.0"?>

<!-- TODO description element should get childs for all languages iso attributes -->

<commands>

    <command name="package" alias="pa">

    <description lang="en">
			Something.
    </description>

    <options>
      <option opt="m" longOpt="module" required="true" description="The module name">
        <arg name="module-name"/>
      </option>
    </options>

    <classname>nl.toolforge.karma.core.cmd.impl.PackageModule</classname>

    <help/>

  </command>

  <command name="start-work" alias="sw">

    <description lang="en">
			Something.
    </description>

    <options>
      <option opt="m" longOpt="module" required="true" description="The module name">
        <arg name="module-name"/>
      </option>
    </options>

    <classname>nl.toolforge.karma.core.cmd.impl.StartWorkCommand</classname>

    <help/>

  </command>

  <command name="stop-work" alias="st">

    <description lang="en">
			Something.
    </description>

    <options>
      <option opt="m" longOpt="module" required="true" description="The module name">
        <arg name="module-name"/>
      </option>
    </options>

    <classname>nl.toolforge.karma.core.cmd.impl.StopWorkCommand</classname>

    <help/>

  </command>

  <command name="build-all-modules" alias="ba">

    <description lang="en">
			Something.
    </description>

    <classname>nl.toolforge.karma.core.cmd.impl.BuildAllModules</classname>

    <help/>

  </command>

  <command name="build-module" alias="bm">

    <description lang="en">
			Something.
    </description>

    <options>
      <option opt="m" longOpt="module" required="true" description="The module name">
        <arg name="module-name"/>
      </option>
    </options>

    <classname>nl.toolforge.karma.core.cmd.impl.BuildModule</classname>

    <help/>

  </command>

  <command name="update-all" alias="ua">

    <description lang="en">
			Updates all modules from the active manifest.
    </description>

    <options/>

    <classname>nl.toolforge.karma.cli.cmd.UpdateAllModulesImpl</classname>

    <help/>

  </command>

  <command name="view-manifest" alias="vm">

    <description lang="en">
			Views the active manifest.
    </description>

    <options/>

    <classname>nl.toolforge.karma.cli.cmd.ViewManifestImpl</classname>

    <help>
			This command shows the status of the current manifest.
    </help>

  </command>

  <command name="create-module" alias="cm">

    <description lang="en">
			Creates a module (optionally includes it in the manifest as well).
    </description>

    <options>
      <option opt="m" longOpt="module" required="true" description="The module name">
        <arg name="module-name"/>
      </option>
      <option opt="l" longOpt="location" required="true" description="The location alias">
        <arg name="location-alias"/>
      </option>
      <option opt="c" longOpt="comment" required="true" description="The developer's comment">
        <arg name="comment"/>
      </option>
<!--      <option opt="i" longOpt="include" required="false" description="Include the module in the manifest"/>-->
    </options>

    <classname>nl.toolforge.karma.core.cmd.impl.CreateModuleCommand</classname>

    <help>
			This command adds a module to a version control system and optionally includes the module in the active
			manifest.
    </help>

  </command>

  <command name="promote-module" alias="pm">

    <description lang="en">
			Promotes a module to the next version.
    </description>

    <options>
      <option opt="m" longOpt="module" required="true" description="The module name">
        <arg name="module-name"/>
      </option>
      <option opt="c" longOpt="comment" required="true" description="The developer's comment">
        <arg name="comment"/>
      </option>
      <option opt="v" longOpt="version" required="false" description="The new version number for the module">
        <arg name="new-version"/>
      </option>
    </options>

    <classname>nl.toolforge.karma.cli.cmd.PromoteModuleImpl</classname>

    <help/>

  </command>

  <command name="select-manifest" alias="slm">

    <description lang="en">
			The select-manifest command activates a manifest by reading it from disk and loading it into Karma.
    </description>

    <options>
      <option opt="m" longOpt="manifest" required="true" description="The manifest name">
        <arg name="manifest-name"/>
      </option>
    </options>

    <classname>nl.toolforge.karma.cli.cmd.SelectManifestImpl</classname>

    <!--		<dependencies>-->
    <!--			<dependency type="vc-support" name="cvs"/>-->
    <!--			<dependency type="vc-support" name="subversion"/>-->
    <!--			<dependency type="module-support" name="lib"/>-->
    <!--			<dependency type="module-support" name="source"/>-->
    <!--		</dependencies>-->

    <help/>

  </command>

  <command name="update-module" alias="upd">

    <description lang="en">
			The update command updates a module from a version control system.
    </description>
    <description lang="nl">
			Het update commando doet een update op een module vanuit een versie beheer systeem.
    </description>

    <options>
      <option opt="m" longOpt="module-name" required="true" description="The module name that should be updated">
        <arg name="module-name"/>
      </option>
      <option opt="v" longOpt="version" required="false" description="A specific version">
        <arg name="version-number"/>
      </option>
    </options>

    <classname>nl.toolforge.karma.cli.cmd.UpdateModuleImpl</classname>

    <help>
			The update command updates a module on a developer's local disk. Optionally, a version-number
			can be provided, to update to a specific version. The version-number must comply to the pattern
			rules for version numbers as defined by ...
    </help>

  </command>

  <command name="list-manifests" alias="lm">

    <description>
			The list-manifests command shows all manifests.
    </description>

    <options/>

    <classname>nl.toolforge.karma.cli.cmd.ListManifestsImpl</classname>

    <dependencies/>

    <help>
			There is a central repository (generally maintained in a version control system), which contains all the
			available manifests. This repository is configured in the builder.properties file. There
			can be only one such a repository configured in the builder. With the update-manifests command manifests
			are downloaded from the manifest repository and put on the local file system. The list-manifests command
			lists these local manifests. Only these manifests are available for the Karma runtime.
    </help>

  </command>

</commands>

