<?xml version="1.0"?>

<document>

  <properties>
    <title>Toolforge User Documentation</title>
  </properties>

  <body>

  <section name="Getting Started">

  <p>
    This page describes how to get started with Karma. From an installation
    point of view, it is easy to get started, but there is some configuration
    that is required before Karma can be used.
  </p>

  </section>

  <section name="System Requirements">

  <p>
    Karma has been development using JDK 1.4.2+. Packages like
    <code>java.util.prefs</code> and <code>java.util.regexp</code> are used,
    so you'll need at least JDK 1.4.
  </p>

  <p>
    
  </p>

  </section>

  <section name="Installation">

  <p>
    Karma is easy to install. All releases are distributed with an <a
    href="http://www.izforge.com/izpack/">IzPack</a> installer.
  </p>

  <ul>

    <li>Download the latest version from <a
    href="http://sourceforge.net/projects/toolforge">Sourceforge</a></li>

    <li>Ensure you have a JDK 1.4.2+ installed and your
    <code>JAVA_HOME</code> environment variable is set the correct JDK.</li>

    <li>Run <code>java -jar
    karma-&lt;version&gt;-INSTALLER.jar</code>. This will start a GUI
    installer. Just follow the instructions.</li>

  </ul>

  </section>

  <section name="Configuration">
  
  <subsection name="Administrative Requirements">

  <p>
    Karma manages manifests and modules. Part of the management task is the
    storage of those manifests and modules. Storing modules in a version
    control system is common practice in development organizations. Karma uses
    a 'manifest store' to store manifest files as well.
  </p>

  <p>
    Please refer to the <a href="administration-guide.html">Administration
    Guide</a> for further information about the manifest store configuration.
  </p>

  </subsection>

  <subsection name="User Environment Configuration">

  <p>
    After installation, a little bit of configuration is required:

    <ul>

    <li>Karma requires a <code>KARMA_HOME</code> environment variable, which
    should point to the same location you used during the installation process
    (yep, we owe you this one as a default from the installation process
    itself, but haven't implemented this as yet in the installation script).</li>

    <li>Add <code>$KARMA_HOME/bin</code> (Windows- or Unix-style) to your
    <code>PATH</code> environment variable.</li>

    </ul>
  </p>

  <p>
    The remaining configuration is done as needed when Karma is started. The
    next step is to start Karma. Karma R1.0 comes with to flavours of user
    interfaces. One is the command-line interface, the other is the console. 
  </p>

  <h4>The Karma binary</h4>

  <p>
    Karma can be started in the following ways:
  </p>

  <source>karma</source>

  <p>
    Prints usage information. Just using <code>karma</code> without anything
    means nothing to Karma, as we are not Ant or Maven and for clarity we
    don't perform a default startup procedure.
  </p>

  <source>karma [-u] [-w &lt;working-context&gt;] console</source>

  <p>
    Starts the Karma console, which is the command shell for Karma. The
    <code>-u</code> option updates the manifest store and location store (see
    the <a href="administration-guide.html">Administration Guide</a> for
    in-depth coverage of these two terms). <code>-w</code> sets another
    working context (see the <a href="#wc">Working Context Configuration</a>
    section). If ommitted, the last used working context (stored as a Java
    preference) is used.
  </p>

  <p>
    <b>Note</b>: a working context name must follow the pattern
    <code>[a-zA-Z0-9_][a-zA-Z0-9_\-]*</code> (don't start with a
    <code>-</code>).
  </p>

  <source>karma [-u] [-w &lt;working-context&gt;] &lt;command&gt; &lt;command-options&gt;</source>

  <p>
    Much like <code>karma [-u] [-w &lt;working-context&gt;] console</code>,
    but this variant executes one command, then quits, which is usefull for
    batch processing of commands.
  </p>

  <p>
    During startup, the following output will be shown:
  </p>
 
  <source>
      _________________________________
      Welcome to Karma (R1.0)       !!!

      K     A     R        M        A
      .     .     .        .        .
      Karma Ain't Remotely Maven or Ant
      _________________________________

[ console ] Logging will be written to /home/asmedes/dev/toolforge/karma-cli/logs.
[ console ] Checking working context configuration for `default`.
[ console ] Configuration complete. Loading working context `default` ...
[ console ] Configuration can be manually updated in `/home/asmedes/.karma/working-contexts/default`

[ console ] Starting up console ...

[ init ] Updating manifests ...
[ init ] Updating locations ...
[ init ] Loading manifest from history ...
[ init ] Manifest `something` has been activated.
  </source>

  <p>
    Karma will start and try and locate the settings for the working context
    specified with the <code>-w</code> argument. If the working context does
    not yet exist, Karma will create the working context and start a
    configurator, which will guide you through the working context setup.
  </p>

  </subsection>

  <a name="wc"/>

  <subsection name="Working Context Configuration">

  <p>
    In the <a href="basics.html#working-context-support">Basics</a> section, the
    working context concept was defined.
  </p>

  <p>
    Having started Karma, you have configured your first working context. The
    properties for a working context can be changed in
    <code>working-context.xml</code>, located in the working context
    subdirectory of <code>${user.home}/.karma/working-contexts</code>.
  </p>

  <p>
     For in-depth information on working contexts, see the <a
     href="reference/working-context/index.html">Reference Documentation</a>.
  </p>

  </subsection>

  </section>

  </body>

</document>
