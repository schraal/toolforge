<?xml version="1.0"?>

<document>

  <properties>
    <title>Toolforge User Documentation</title>
  </properties>

  <body>

  <section name="Getting Started">

  <p>
    This page describes how to get started with Karma. From an installation
    point of view, it is easy to get started, but there is some configuration
    that is required before Karma can be used.
  </p>

  </section>

  <section name="System Requirements">

  <p>
    Karma has been development using JDK 1.4.2+. Packages like
    <code>java.util.prefs</code> and <code>java.util.regexp</code> are used,
    so you'll need at least JDK 1.4.
  </p>

  <p>
    
  </p>

  </section>

  <section name="Installation">

  <p>
    Karma is easy to install. All releases are distributed with an <a
    href="http://www.izforge.com/izpack/">IzPack</a> installer.
  </p>

  <ul>

    <li>Download the latest version from <a
    href="http://sourceforge.net/projects/toolforge">Sourceforge</a></li>

    <li>Ensure you have a JDK 1.4.2+ installed and your
    <code>JAVA_HOME</code> environment variable is set the correct JDK.</li>

    <li>Run <code>java -jar
    karma-&lt;version&gt;-INSTALLER.jar</code>. This will start a GUI
    installer. Just follow the instructions.</li>

  </ul>

  </section>

  <section name="Configuration">
  
  <subsection name="Administrative Requirements">

  <p>
    Karma manages manifests and modules. Part of the management task is the
    storage of those manifests and modules. Storing modules in a version
    control system is common practice in development organizations. Karma uses
    a 'manifest store' to store manifest files as well.
  </p>

  <p>
    Please refer to the <a href="administration-guide.html">Administration
    Guide</a> for further information about the manifest store configuration.
  </p>

  </subsection>

  <subsection name="User Environment Configuration">

  <p>
    After installation, a little bit of configuration is required:

    <ul>

    <li>Karma requires a <code>KARMA_HOME</code> environment variable, which
    should point to the same location you used during the installation process
    (yep, we owe you this one as a default from the installation process
    itself, but haven't implemented this as yet in the installation script).</li>

    <li>Add <code>$KARMA_HOME/bin</code> (Windows- or Unix-style) to your
    <code>PATH</code> environment variable.</li>

    </ul>
  </p>

  <p>
    The remaining configuration is done as needed when Karma is started. The
    next step is to start Karma. Karma R1.0 comes with two flavours of user
    interfaces. One is the command-line interface, the other is the console. We'll
    start with the console
  </p>

  <h4>The Karma console</h4>

  <p>
    Karma shows its usage information when you enter:
  </p>

  <source>karma</source>

  <p>
    Just using <code>karma</code> without anything
    means nothing to Karma, as we are not Ant or Maven and for clarity we
    don't perform a default startup procedure. The output looks like:
  </p>

  <source>

usage: karma [options] console | &lt;command&gt; &lt;command options&gt;

Options:
  -u                         Update the location- and manifest store.
  -w &lt;working context&gt;       Load the given working context.

console                      Start the Karma console.
&lt;command&gt; &lt;command options&gt;  Run the given command with the given options.
                             Use the 'help' command for the list of commands.

  </source>

  <p>
    We'll choose for the option of starting the console, which also starts the
    configuration process.
  </p>
  <source>karma [-u] [-w &lt;working-context&gt;] console</source>

  <p>
    The <code>-u</code> option updates the manifest store and location store (see
    the <a href="administration-guide.html">Administration guide</a> for
    in-depth coverage of these two terms). <code>-w</code> specifies the
    <a href="#wc">working context</a>. If ommitted, the last used working context is selected.
  </p>

  <p>
    <b>Note</b>: a working context name must follow the pattern
    <code>[a-zA-Z0-9_][a-zA-Z0-9_\-]*</code> (don't start with a
    <code>-</code>).
  </p>

  <p>
    Just do a <strong>karma console</strong> for the moment. This starts up the console, which
    is going to complain about missing configuration:
  </p>

  <source>

      _________________________________
      Welcome to Karma (R1.0 BETA6) !!!

      K     A     R        M        A
      .     .     .        .        .
      Karma Ain't Remotely Maven or Ant
      _________________________________

[ console ] Logging will be written to /home/user/Karma/logs.
[ console ] Checking working context configuration for `default`.
[ console ] ** Error in working context configuration : WCC-00001 : Could not load `working-context.xml`.
[ console ] ** Error in working context configuration : Missing configuration for manifest store.
[ console ] ** Error in working context configuration : Missing configuration for location store.
[ console ] Working context not initialized properly, start configurator ? [Y|N] (Y) :

  </source>

  <p>
    Just say <strong>Y</strong> here, or else you wont get much further.
    The configurator is going to start to ask you questions. The first one is for your
    <strong>project base directory</strong>. This is the directory into which all your
    project's source code and configuration is stored. Choose your own location or just stick
    with the default by pressing enter:
  </p>

    <source>[ configurator ] What is your project base directory (/home/user/karma/default) :</source>

    <p>
      Now, you're asked to specify your manifest store. The information needed for this step
      should be obtained from your Karma administrator, or if you're the Karma administrator
      yourself you should read the <a href="administration-guide.html">Administration guide</a>
      for more details.
    </p>

    <p>
      So, fill in the requested information, e.g. like below:
    </p>

    <source>
[ configurator ] Please configure the manifest-store !
[ configurator ] What is your server protocol ? [ local | pserver ] (pserver) : local
[ configurator ] What is your server repository ? (/home/cvs) : /home/user/cvs
[ configurator ] What is the cvs module for the manifest store ? (manifests)
[ configurator ] What is your username ?  : user
    </source>

    <p>
      And do the same for the location store:
    </p>

    <source>
[ configurator ] Please configure the location-store !
[ configurator ] What is your server protocol ? [ local | pserver ] (pserver) : local
[ configurator ] What is your server repository ? (/home/cvs) : /home/user/cvs
[ configurator ] What is the cvs module for the location store ? (locations)
[ configurator ] What is your username ?  : user
    </source>

    <p>
      If the information you provided is correct, Karma will reward you with:
    </p>

    <source>
[ console ] Configuration complete. Loading working context `default` ...
[ console ] Configuration can be manually updated in `/home/user/.karma/working-contexts/default`

[ console ] Starting up console ...

[ init ] Loading manifest from history ...
[ init ] No manifest stored in history ...
21:40:03 [ default::Karma ] >
    </source>

    <p>
      Now your Karma is up-and-running. You can try some commands (like
      <strong>list-manifests</strong> or <strong>help</strong> ;).
      <br/>
      Also, once you have configured your working context via the console, you can
      start using the command-line interface.
    </p>


  </subsection>

  <a name="wc"/>

  <subsection name="Working Context Configuration">

  <p>
    In the <a href="basics.html#working-context-support">Basics</a> section, the
    working context concept is defined.
  </p>

  <p>
    Having started Karma, you have configured your first working context. The
    properties for a working context can be changed in
    <code>working-context.xml</code>, located in the working context
    subdirectory of <code>${user.home}/.karma/working-contexts</code>.
  </p>

  <p>
     For in-depth information on working contexts, see the <a
     href="reference/working-context/index.html">Reference Documentation</a>.
  </p>

  </subsection>

  </section>

  </body>

</document>
