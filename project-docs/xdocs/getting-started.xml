<?xml version="1.0"?>

<document>

  <properties>
    <title>Toolforge User Documentation</title>
  </properties>

  <body>

  <section name="Getting Started">

  <p>
    This page describes how to get started with Karma. From an installation
    point of view, it is easy to get started, but there is some configuration
    that is required before Karma can be used.
  </p>

  </section>

  <section name="System Requirements">

  <p>
    Karma has been development using JDK 1.4.2+. Packages like
    <code>java.util.prefs</code> and <code>java.util.regexp</code> are used,
    so you'll need at least JDK 1.4.
  </p>

  <p>
    
  </p>

  </section>

  <section name="Installation">

  <p>
    Karma is easy to install. All releases are distributed with an <a
    href="http://www.izforge.com/izpack/">IzPack</a> installer.
  </p>

  <ul>

    <li/>Download the latest version from <a
    href="http://sourceforge.net/projects/toolforge">Sourceforge</a>

    <li/>Ensure you have a JDK 1.4.2+ installed and your
    <code>JAVA_HOME</code> environment variable is set the correct JDK.

    <li/>Run <code>java -jar
    karma-cli-&lt;version&gt;-INSTALLER.jar</code>. This will start a GUI
    installer. Just follow the instructions.

  </ul>

  </section>

  <section name="Configuration">
  
  <subsection name="Administrative Requirements">

  <p>
    The power of Karma is in managing manifests and modules. Part of the
    management task is the storage of those manifests and modules. Storing
    modules in a version control system is common practice in development
    organizations. Karma uses a 'manifest store' to store manifest files. A
    manifest store can (not mandatory) to be
  </p>

  <p>
    Please refer to the <a href="administration-guide.html">administration
    guide</a> for further information about the manifest store configuration.
  </p>

  </subsection>

  <subsection name="User Environment Configuration">

  <p>
    After installation, a little bit of configuration is required:

    <ul>

    <li/>Karma requires a <code>KARMA_HOME</code> environment variable, which
    should point to the same location you used during the installation process
    (yep, we owe you this one as a default from the installation process
    itself, but haven't implemented this as yet in the installation script).

    <li/>Add <code>$KARMA_HOME/bin</code> (Windows- or Unix-style) to your
    <code>PATH</code> environment variable.

    </ul>
  </p>

  <p>
    The remaining configuration is done as needed when Karma is started. The
    next step is to start Karma. Karma R1.0 comes with to flavours of user
    interfaces. One is the command-line interface, the other is the console. 
  </p>

  <h4>Linux users (and similar operation systems)</h4>

  <p>
    Karma can be started in the following ways:
  </p>

  <source>karma console -w &lt;working-context&gt;</source>

  <source>karma &lt;command&gt; &lt;command-options&gt;</source>

  <p>
    The first one starts the Karma console application for the specified
    working context (see the <a href="#wc">Working Context Configuration</a>
    section). The second one runs the specified command only.
  </p>

  <h4>Windows users</h4>

  <p>
    Karma can be started in the following ways:
  </p>

  <source>karma.bat console -w &lt;working-context&gt;</source>

  <source>karma.bat &lt;command&gt; &lt;command-options&gt;</source>

  <p>
    Karma will start up and check its environment. The following output should
    be shown:
  </p>
 
  <source>
********************
Welcome to Karma !!!
********************

Loading working context `default` ...
Checking manifest store configuration ...
  </source>

  <p>
    Karma will start and try and locate the settings for the working context
    specified with the <code>-w</code> argument. If the working context does
    not yet exist, Karma will create the working context and ask the user for
    some configuration settings. Please read the <a href="#wc">Working Context
    Configuration</a> section for further reference. 
  </p>

  </subsection>

  <a name="wc"/>

  <subsection name="Working Context Configuration">

  <p>
    The working context is the set of manifests
  </p>

  <p>
    Using Karma directly with a command requires that a working context has
    been set already. Using any command 
  </p>

  </subsection>

  </section>

  </body>

</document>
