<?xml version="1.0"?>
<document>

  <properties>
    <title>Reference Documentation</title>
  </properties>

  <body>
    <section name="Modules">
      <p>
        The smallest unit that is managed by Karma is a module. A module is
        a directory structure, containing source code, unit tests, documentation,
        configuration and the like.
      </p>
      <subsection name="Module name">
        <p>
          A module name must be composed from the characters: <code>A-Z</code>,
          <code>a-z</code>, <code>-</code>, <code>0-9</code>.

          Valid examples are:
          <ul>
            <li>A</li>
            <li>-</li>
            <li>4</li>
            <li>karma-core</li>
            <li>log4j</li>
          </ul>
          <b>Not</b> valid are, e.g.:
          <ul>
            <li>karma_core ('_' is not allowed)</li>
            <li>karma core (' ' is not allowed)</li>
            <li>karma-core! ('!' is not allowed)</li>
          </ul>
        </p>
        </subsection>
        <subsection name="Karma system files">
        <p>
          A module must have a least one file in the root of the module:
          <table>
            <tr>
              <th>File</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>module-descriptor.xml</td>
              <td>
                This file serves two purposes.
                <br/>The first is to specify the type
                of the module. See <a href='module-types.html'>module types</a>.
                <br/>
                The second purpose is that of version storage.
                Speaking in CVS
                terminology: everytime a module is promoted to a higher version,
                a version tag is placed on its files. Karma uses the version tags
                on this file to retrieve the module's available versions. See
                <a href="module-versions.html">module versions</a> for more information.
              </td>
            </tr>
          </table>
          Optional, but important files are:
          <table>
            <tr>
              <th>File</th>
              <th>Description</th>
            </tr>
            <tr>
              <td>history.xml</td>
              <td>
                The history.xml stores all history information of a module. When
                the module is created using Karma a 'module creation' event is
                logged. When promoting a module a 'promote module' event is logged.
                <br/>
                A module's history is used for generating release notes, determining
                whether to upgrade to a newer version of a module, etc.
                <br/>
                 See <a href="module-history.html">module history</a> for more information.
              </td>
            </tr>
            <tr>
              <td>dependencies.xml</td>
              <td>
                A module can have dependencies on other modules and on external libraries.
                These dependencies are used when building, testing or packaging a module.
                See <a href='../configuration-management/dependency-management.html'>
                dependency management</a> for more information.
              </td>
            </tr>
          </table>

        </p>
        </subsection>

      <subsection name="Module creation">
      <p>
        Modules are best created by using the <code>create-module</code> command:
<source>
Usage of `create-module`:
----------------------------
create-module (crm)
   -m, --module &lt;module-name&gt;        The module name
   -c, --comment &lt;comment&gt;           The developers comment
   -t, --type &lt;module-type&gt;          Type of the module (see documentation!)
   -l, --location &lt;location-alias&gt;   The location alias
</source>

        An example is:
<source>
create-module -m karma-core -c "The core of Karma" -t JAVA-SOURCE-MODULE -l karma-sf
</source>

        This command will create a module with the name <code>karma-core</code>
        and type <code>JAVA-SOURCE-MODULE</code> in the location <code>karma-sf</code>.
        This location represents the karma cvs repository on SourceForge, e.g.
        Module creation is logged in the history of a module by means of a module
        creation event. The comment is stored as an attribute of this event.
      </p>
      <p>
        Although not recommended, and much more work, it is possible to create a
        module by hand. Be sure to add all the <a href='#Karma_system_files'>necessary files</a>
        to your module.
      </p>
      </subsection>
    </section>
 </body>
</document>
