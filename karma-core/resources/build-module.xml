<?xml version="1.0" encoding="UTF-8"?>

<project name="karma" default="none">

  <target name="none">

    <!-- Nothing -->

  </target>

  <target name="init-build-dir">

    <!-- '${module-build-dir}' maps to ${development.home}/<manifest-name>/build/<module-name>-->
    <mkdir dir="${module-build-dir}"/>

  </target>

  <!-- ************************ -->
  <!-- test-module (tm)        -->
  <!-- ************************ -->

  <target name="test-module" depends="init-build-dir">

    <!-- '${module-build-dir}' maps to ${development.home}/<manifest-name>/build/<module-name>-->
    <!-- '${module-source-dir}' maps to ${development.home}/<manifest-name>/<module-name>/src/java-->
    <!-- '${compile-classpath}' is determined by Module.getDependencies -->

    <mkdir dir="${module-build-dir}/${module-test-dir}/xml"/>

    <javac
      destdir="${module-build-dir}/${module-test-dir}"
      srcdir="${module-source-dir}"
      classpath="${module-classpath}"
      debug="true"/>

    <!-- <echo message="classpath: ${module-classpath}:${module-build-dir}/${module-test-dir}:${module-source-dir}/../resources"/> -->

    <available property="excludes-file-present" file="${module-source-dir}/excludes.properties"/>
    <junit
      printsummary="yes"
      showoutput="yes"
      fork="no"
      errorproperty="unittestsfailed"
      failureproperty="unittestsfailed"
      reloading="false">

      <!-- todo: pad moet anders -->
      <classpath>
        <pathelement path="${module-classpath}:${module-build-dir}/${module-test-dir}:${module-source-dir}/../resources:${module-source-dir}/../../resources"/>
      </classpath>

      <formatter type="xml"/>

      <batchtest todir="${module-build-dir}/${module-test-dir}/xml">
        <fileset dir="${module-source-dir}">
          <include name="**/*.java"/>
          <excludesfile name="${module-source-dir}/excludes.properties" if="excludes-file-present"/>
        </fileset>
      </batchtest>
    </junit>
    <fail message="Tests failed." if="unittestsfailed"/>
    
  </target>

  <!-- *********************************************************** -->
  <!-- clean-module (clm); removes build and test stuff of module  -->
  <!-- *********************************************************** -->

  <target name="clean-module">
    <delete dir="${module-build-dir}" />
  </target>

  <!-- ************************************************************* -->
  <!-- clean-all (cla); removes build and test stuff of all modules  -->
  <!-- ************************************************************* -->

  <target name="clean-all">
    <delete dir="${manifest-build-dir}" />
  </target>


  <!-- *************************************** -->
  <!-- package-module (pa); resulting in an ear -->
  <!-- *************************************** -->

  <target name="package-module-as-ear" depends="init-build-dir">

    <delete dir="${module-build-dir}" includes="*.ear;archives.*"/>

    <!-- copy the eapp stuff, while replacing module ids in application.xml -->
    <copy todir="${module-build-dir}/${module-package-dir}" overwrite="true">
      <fileset dir="${module-base-dir}" includes="${module-includes}"/>
      <filterset>
        <filtersfile file="${module-build-dir}/archives.properties"/>
      </filterset>
    </copy>

    <!-- copy the external jars and wars-->
    <copy todir="${module-build-dir}/${module-package-dir}" flatten="yes">
      <fileset dir="${module-build-dir}" includesfile="${module-build-dir}/archives.includes"/>
    </copy>

    <ear
      destfile="${module-package-name}"
      basedir="${module-build-dir}/${module-package-dir}"
      appxml="${module-appxml}"
      excludes="${module-excludes}"
      />

  </target>

</project>